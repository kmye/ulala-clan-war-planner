{"version":3,"sources":["constants/classes.js","components/player/PlayerInputForm.js","constants/action_types.js","actions/player.js","constants/drag_item_types.js","components/player/PlayerCard.js","services/import_csv_service.js","components/player/PlayerList.js","selector.js","components/team/TeamPlayerIcon.js","components/team/TeamCard.js","constants/team_types.js","components/team/TeamList.js","components/app/App.js","reducers/player.js","constants/local_storage.js","reducer.js","reducers/player_import_form.js","reducers/team_list.js","store.js","index.js"],"names":["ClassType","ULALA_CLASSES","id","name","type","getClassByName","result","index","element","trim","key","label","getAllClassIdsByType","classIds","push","ULALA_CLASS_TAG_COLORS","PlayerInputForm","Form","create","mapPropsToFields","props","playerInput","createFormField","value","power","class","onCancel","onSave","form","validateFields","err","formValues","isUpdateMode","playerIndex","teamType","teamIndex","resetFields","getFieldDecorator","this","title","visible","okText","onOk","layout","Item","rules","required","message","pattern","RegExp","max","allowClear","min","showSearch","labelInValue","style","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","item","Option","React","Component","connect","state","playerInputForm","updatePlayer","player","payload","unassignPlayer","ItemTypes","PlayerCard","useDrag","playerObject","collect","monitor","isDragging","drag","assignedIcon","icon","onClick","onUnassignPlayerClick","actions","shouldRenderActions","onUpdatePlayerClick","onConfirm","onDeletePlayerClick","cancelText","playerColor","playerDescription","position","right","color","ref","opacity","cursor","marginTop","minWidth","extra","span","toLocaleString","cleanString","replace","importCSVService","rawData","split","playerData","PlayerList","openPlayerInputForm","openForm","closePlayerInputForm","closeForm","formRef","savePlayerInfo","addPlayer","updatePlayerClick","unassignPlayerClick","deletePlayerClick","deletePlayer","sortPlayersAscending","sortPlayersByPower","sortPlayersDescending","autoAssign","loading","autoAssignPlayers","exportData","formattedData","players","console","log","undefined","team","ExportToCsv","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","generateCsv","renderAddPlayerButton","fileUploadProps","accept","action","showUploadList","onChange","info","file","status","reader","FileReader","addEventListener","e","clearPlayers","processRows","target","forEach","readAsText","error","beforeUpload","gutter","shape","initPlayers","additionalActions","totalPlayers","havePlayers","length","display","alignItems","height","description","padding","justify","align","wrappedComponentRef","sortType","getAllPlayers","store","getPlayersByTeamIndex","emptySpots","i","fillUpEmptySpots","filter","TeamPlayerIcon","playerRepresentation","popoverContent","content","trigger","TeamCard","teamPower","parseInt","useDrop","drop","updatePlayerToTeam","canDrop","isOver","background","placement","count","overflowCount","backgroundColor","TeamType","TeamList","totalTeams","teamPlayers","getPlayersByTeamType","teamTemplate","teams","isEliteTeam","defenseTeamTemplates","eliteTeamTemplates","attackTeamTemplates","renderTeam","buildTeamTemplateByType","renderInColumns","renderInRows","teamList","Header","Layout","Footer","Sider","Content","DndProvider","backend","HTML5Backend","overflow","left","marginLeft","className","margin","storePlayersInLocalStorage","localStorage","setItem","JSON","stringify","removePlayerFromArray","arrayList","updatePlayerInArray","sortPlayers","sortAscending","sort","a","b","sortedPlayers","tankPlayers","includes","dpsPlayers","magicDpsPlayers","supportPlayers","assignedPlayers","shiftPlayer","shift","assignToTeams","assignedCount","unassignedPlayers","combineReducers","localStoragePlayers","getItem","parse","newPlayers","slice","updatedArray","filtered","sorted","displayInRow","router","routerReducer","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a44ff2a2.chunk.js","sourcesContent":["export const ClassType = {\n  DPS: 'Dps',\n  MAGIC_DPS: 'Magic DPS',\n  TANK: 'Tank',\n  SUPPORT: 'Support',\n};\n\nexport const ULALA_CLASSES = [\n  {\n    id: 1,\n    name: 'Assassin',\n    type: ClassType.DPS,\n  },\n  {\n    id: 2,\n    name: 'Hunter',\n    type: ClassType.DPS,\n  },\n  {\n    id: 3,\n    name: 'Gladiator',\n    type: ClassType.TANK,\n  },\n  {\n    id: 4,\n    name: 'Warrior',\n    type: ClassType.TANK,\n  },\n  {\n    id: 5,\n    name: 'Shaman',\n    type: ClassType.SUPPORT,\n  },\n  {\n    id: 6,\n    name: 'Warlock',\n    type: ClassType.MAGIC_DPS,\n  },\n  {\n    id: 7,\n    name: 'Druid',\n    type: ClassType.SUPPORT,\n  },\n  {\n    id: 8,\n    name: 'Mage',\n    type: ClassType.MAGIC_DPS,\n  },\n];\n\nexport const getClassByName = (name) => {\n  let result = null;\n\n  for (const index in ULALA_CLASSES) {\n    const element = ULALA_CLASSES[index];\n    if (element.name.trim() === name.trim()) {\n      result = element;\n      break;\n    }\n  }\n\n  return { key: result.id, label: result.name };\n};\n\nexport const getAllClassIdsByType = (type) => {\n  const classIds = [];\n  for (const index in ULALA_CLASSES) {\n    const element = ULALA_CLASSES[index];\n\n    if (element.type === type) {\n      classIds.push(element.id);\n    }\n  }\n\n  return classIds;\n};\n\nexport const ULALA_CLASS_TAG_COLORS = [\n  'orange',\n  'orange',\n  'red',\n  'red',\n  'purple',\n  'purple',\n  'cyan',\n  'cyan',\n];\n\nexport const ULALA_CLASS_HEX_COLORS = [\n  'orange',\n  'orange',\n  'red',\n  'red',\n  'purple',\n  'purple',\n  'cyan',\n  'cyan',\n];\n","import React from \"react\";\r\nimport {Form, Input, InputNumber, Select} from 'antd';\r\nimport Modal from \"antd/lib/modal\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {ULALA_CLASSES} from \"../../constants/classes\";\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.playerInputForm\r\n});\r\n\r\nexport const PlayerInputForm = Form.create({\r\n    mapPropsToFields: (props) => {\r\n        const {playerInput} = props;\r\n\r\n        if (playerInput != null) {\r\n            return {\r\n                name: Form.createFormField({\r\n                    value: playerInput.name,\r\n                }),\r\n                power: Form.createFormField({\r\n                    value: playerInput.power,\r\n                }),\r\n                class: Form.createFormField({\r\n                    value: playerInput.class,\r\n                })\r\n            };\r\n        }\r\n\r\n    }\r\n})(\r\n    class extends React.Component {\r\n\r\n        onCancel = () => {\r\n            const {onCancel} = this.props;\r\n            onCancel();\r\n        };\r\n\r\n        onSave = () => {\r\n            const {form, onSave, playerInput} = this.props;\r\n\r\n            form.validateFields((err, formValues) => {\r\n                if (err) {\r\n                    return;\r\n                }\r\n\r\n                const isUpdateMode = playerInput != null;\r\n\r\n                if (isUpdateMode) {\r\n                    formValues.playerIndex = playerInput.playerIndex;\r\n                    formValues.teamType = playerInput.teamType;\r\n                    formValues.teamIndex = playerInput.teamIndex;\r\n                }\r\n\r\n                onSave(formValues, isUpdateMode);\r\n\r\n                form.resetFields();\r\n            });\r\n\r\n        };\r\n\r\n        render() {\r\n\r\n            const {form} = this.props;\r\n            const {getFieldDecorator} = form;\r\n\r\n            return (\r\n                <Modal\r\n                    title=\"Input Player Data\"\r\n                    visible={this.props.visible}\r\n                    okText=\"Save\"\r\n                    onOk={this.onSave}\r\n                    onCancel={this.onCancel}>\r\n\r\n                    <Form layout=\"vertical\">\r\n                        <Form.Item label=\"Name\">\r\n                            {getFieldDecorator('name', {\r\n                                rules: [\r\n                                    {required: true, message: 'Player name is required.'},\r\n                                    {pattern: new RegExp('^\\\\w*$'), message: 'Player name must be alphanumeric input only.'},\r\n                                    {max: 15, message: 'Player name cannot exceed 15 characters'}\r\n                                ],\r\n                            })(<Input allowClear/>)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Power\">\r\n                            {getFieldDecorator('power', {\r\n                                rules: [{required: true, message: 'Power is required.'}],\r\n                            })(<InputNumber min={1}/>)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Class\">\r\n                            {getFieldDecorator('class', {\r\n                                rules: [{required: true, message: 'Class is required.'}],\r\n                            })(<Select\r\n                                showSearch\r\n                                labelInValue\r\n                                style={{width: 200}}\r\n                                placeholder=\"Select class\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {ULALA_CLASSES.map((item) => {\r\n                                    return <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>\r\n                                })}\r\n                            </Select>)}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            );\r\n        }\r\n    }\r\n);\r\n\r\n\r\nconnect(mapStateToProps)(PlayerInputForm)\r\n\r\n","export const PLAYER_INIT = 'PLAYER_INIT';\nexport const PLAYER_CLEAR = 'PLAYER_CLEAR';\nexport const PLAYER_ADD = 'PLAYER_ADD';\nexport const PLAYER_DELETE = 'PLAYER_REMOVE';\nexport const PLAYER_UPDATE = 'PLAYER_UPDATE';\n\nexport const PLAYER_SORT_BY_POWER = 'PLAYER_SORT_BY_POWER';\nexport const PLAYER_AUTO_ASSIGN = 'PLAYER_AUTO_ASSIGN';\nexport const PLAYER_UNASSIGN = 'PLAYER_UNASSIGN';\n\nexport const PLAYER_FORM_OPEN = 'PLAYER_FORM_OPEN';\nexport const PLAYER_FORM_CLOSE = 'PLAYER_FORM_CLOSE';\n\nexport const TEAM_INIT = 'TEAM_INIT';\nexport const TEAM_LIST_DISPLAY_IN_ROW = 'TEAM_LIST_DISPLAY_IN_ROW';\nexport const TEAM_LIST_DISPLAY_IN_COL = 'TEAM_LIST_DISPLAY_IN_COL';\n","import {\n  PLAYER_ADD, PLAYER_AUTO_ASSIGN, PLAYER_CLEAR,\n  PLAYER_DELETE,\n  PLAYER_FORM_CLOSE,\n  PLAYER_FORM_OPEN,\n  PLAYER_INIT,\n  PLAYER_SORT_BY_POWER,\n  PLAYER_UNASSIGN,\n  PLAYER_UPDATE,\n} from '../constants/action_types';\n\nexport const initPlayers = () => ({\n  type: PLAYER_INIT,\n});\n\nexport const clearPlayers = () => ({\n  type: PLAYER_CLEAR,\n});\n\nexport const addPlayer = (player) => ({\n  type: PLAYER_ADD,\n  payload: {\n    player,\n  },\n});\n\nexport const updatePlayer = (player) => ({\n  type: PLAYER_UPDATE,\n  payload: {\n    player,\n  },\n});\n\nexport const deletePlayer = (playerIndex) => ({\n  type: PLAYER_DELETE,\n  payload: {\n    playerIndex,\n  },\n});\n\nexport const sortPlayersByPower = (sortType) => ({\n  type: PLAYER_SORT_BY_POWER,\n  payload: {\n    sortType,\n  },\n});\n\nexport const autoAssignPlayers = () => ({\n  type: PLAYER_AUTO_ASSIGN,\n});\n\nexport const unassignPlayer = (player) => ({\n  type: PLAYER_UNASSIGN,\n  payload: {\n    player,\n  },\n});\n\nexport const openForm = (player) => ({\n  type: PLAYER_FORM_OPEN,\n  payload: {\n    playerInput: player,\n  },\n});\n\nexport const closeForm = () => ({\n  type: PLAYER_FORM_CLOSE,\n});\n","export const ItemTypes = {\n  PLAYER: 'PLAYER',\n};\n","import React from 'react';\nimport {\n  Button, Card, Col, Popconfirm, Row, Tag,\n} from 'antd';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from '../../constants/drag_item_types';\nimport { ULALA_CLASS_TAG_COLORS } from '../../constants/classes';\n\nexport function PlayerCard(props) {\n  const onUpdatePlayerClick = () => {\n    props.onUpdatePlayerClick(props.value);\n  };\n\n  const onUnassignedPlayerClick = () => {\n    props.onUnassignPlayerClick(props.value);\n  };\n\n  const onDeletePlayerClick = () => {\n    props.onDeletePlayerClick(props.value.playerIndex);\n  };\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: ItemTypes.PLAYER,\n      playerObject: props.value,\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const assignedIcon = props.value.teamIndex != null\n    ? <Button type=\"dashed\" icon=\"check\" onClick={onUnassignedPlayerClick} /> : '';\n\n  let actions = '';\n\n  if (props.shouldRenderActions) {\n    actions = (\n      <span>\n        {assignedIcon}\n        <Button type=\"dashed\" icon=\"edit\" onClick={onUpdatePlayerClick} />\n        <Popconfirm\n          title=\"Are you sure delete this record?\"\n          onConfirm={onDeletePlayerClick}\n          onCancel={() => {\n          }}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Button type=\"dashed\" icon=\"delete\" />\n        </Popconfirm>\n      </span>\n    );\n  } else {\n    actions = <span>{assignedIcon}</span>;\n  }\n\n  const playerColor = ULALA_CLASS_TAG_COLORS[props.value.class.key - 1];\n\n  const playerDescription = (\n    <div style={{ position: 'absolute', right: 0 }}>\n      <Tag color={playerColor}>{props.value.class.label}</Tag>\n    </div>\n  );\n\n  return (\n    <div\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'move',\n      }}\n    >\n      <Card\n        style={{ width: 'auto', marginTop: 5, minWidth: 270 }}\n        title={`(${props.value.playerIndex + 1}) ${props.value.name}`}\n        extra={actions}\n      >\n        <Row>\n          <Col span={12}>{props.value.power.toLocaleString()}</Col>\n          <Col span={12}>{playerDescription}</Col>\n        </Row>\n      </Card>\n    </div>\n  );\n}\n","import { getClassByName } from '../constants/classes';\n\nfunction cleanString(value) {\n  return value.replace(/\"/g, '');\n}\n\nconst COLUMN_INDEX_NAME = 0;\nconst COLUMN_INDEX_POWER = 1;\nconst COLUMN_INDEX_CLASS = 2;\n\nclass ImportCSVService {\n  processRows(rawData) {\n    const dataRows = rawData.split(/\\n/g);\n\n    return dataRows.map((element, index) => {\n      if (index !== 0) {\n        const playerData = element.split(',');\n\n        return {\n          name: cleanString(playerData[COLUMN_INDEX_NAME]),\n          power: cleanString(playerData[COLUMN_INDEX_POWER]),\n          class: getClassByName(cleanString(playerData[COLUMN_INDEX_CLASS])),\n        };\n      }\n    });\n  }\n}\n\nexport const importCSVService = new ImportCSVService();\n","import React from \"react\";\r\nimport {Button, Col, Divider, Empty, message, Row, Upload} from \"antd\";\r\nimport {PlayerInputForm} from \"./PlayerInputForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPlayer,\r\n    autoAssignPlayers,\r\n    unassignPlayer,\r\n    clearPlayers,\r\n    closeForm,\r\n    deletePlayer,\r\n    initPlayers,\r\n    openForm,\r\n    sortPlayersByPower,\r\n    updatePlayer\r\n} from \"../../actions/player\";\r\nimport {PlayerCard} from \"./PlayerCard\";\r\nimport {ExportToCsv} from \"export-to-csv\";\r\nimport { importCSVService } from \"../../services/import_csv_service\";\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.playerInputForm,\r\n    ...state.player\r\n});\r\n\r\nclass PlayerList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initPlayers();\r\n    }\r\n\r\n    openPlayerInputForm = () => {\r\n        this.props.openForm(null);\r\n    };\r\n\r\n    closePlayerInputForm = () => {\r\n        this.props.closeForm();\r\n    };\r\n\r\n    formRef = (ref) => {\r\n        this.playerInputForm = ref\r\n    };\r\n\r\n    savePlayerInfo = (formValues, isUpdateMode) => {\r\n        isUpdateMode ? this.props.updatePlayer(formValues) : this.props.addPlayer(formValues);\r\n        this.props.closeForm();\r\n    };\r\n\r\n    updatePlayerClick = (player) => {\r\n        this.props.openForm(player);\r\n    };\r\n\r\n    unassignPlayerClick = (player) => {\r\n        this.props.unassignPlayer(player);\r\n    }\r\n\r\n    deletePlayerClick = (playerIndex) => {\r\n        this.props.deletePlayer(playerIndex)\r\n    };\r\n\r\n    sortPlayersAscending = () => {\r\n        this.props.sortPlayersByPower(true)\r\n    };\r\n\r\n    sortPlayersDescending = () => {\r\n        this.props.sortPlayersByPower(false)\r\n    };\r\n\r\n    autoAssign = () => {\r\n        // TODO\r\n        message.loading(\"Work in progress...\");\r\n        this.props.autoAssignPlayers()\r\n    };\r\n\r\n    exportData = () => {\r\n        // export all player data to csv\r\n        const formattedData = this.props.players.map((item) => {\r\n            console.log(item);\r\n            if(item.teamIndex === undefined) {\r\n                return {\r\n                    name: item.name,\r\n                    power: item.power,\r\n                    class: item.class.label,\r\n                    team: \"\"\r\n                }\r\n            } else {\r\n                return {\r\n                    name: item.name,\r\n                    power: item.power,\r\n                    class: item.class.label,\r\n                    team: item.teamType + \" - Team \" +  (item.teamIndex+1),\r\n                }\r\n            }\r\n        });\r\n\r\n        const options = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            showTitle: false,\r\n            useTextFile: false,\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n        };\r\n        const csvExporter = new ExportToCsv(options);\r\n\r\n        csvExporter.generateCsv(formattedData);\r\n    };\r\n\r\n    renderAddPlayerButton = () => {\r\n\r\n        let props = this.props;\r\n\r\n        const fileUploadProps = {\r\n            name: \"file\",\r\n            accept: '.csv,application/vnd.ms-excel',\r\n            action: '#',\r\n            showUploadList: false,\r\n            onChange(info) {\r\n                if (info.file.status !== 'uploading') {\r\n                    let reader = new FileReader();\r\n                    reader.addEventListener('load', function (e) {\r\n                        props.clearPlayers();\r\n                        const importedPlayers = importCSVService.processRows(e.target.result);\r\n                        importedPlayers.forEach(player => {\r\n                            props.addPlayer(player)\r\n                        })\r\n                    });\r\n\r\n                    reader.readAsText(info.file);\r\n                }\r\n                if (info.file.status === 'done') {\r\n                    console.log(\"done\")\r\n                } else if (info.file.status === 'error') {\r\n                    message.error(\"Oops, there is an error.\");\r\n                }\r\n            },\r\n            beforeUpload(file) {\r\n                return false\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Row gutter={8}>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\" icon=\"plus\" shape=\"round\"\r\n                            onClick={this.openPlayerInputForm}>Add</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Upload {...fileUploadProps}>\r\n                        <Button type=\"primary\" icon=\"import\" shape=\"round\">Import</Button>\r\n                    </Upload>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        let players = \"\";\r\n        let additionalActions = \"\";\r\n        let totalPlayers = 0;\r\n\r\n        const havePlayers = this.props.players != null && this.props.players.length > 0;\r\n\r\n        if (havePlayers) {\r\n            totalPlayers = this.props.players.length;\r\n            players = this.props.players.map((item, index) => (\r\n                <PlayerCard key={index}\r\n                            value={item}\r\n                            shouldRenderActions={true}\r\n                            onUnassignPlayerClick={this.unassignPlayerClick}\r\n                            onUpdatePlayerClick={this.updatePlayerClick}\r\n                            onDeletePlayerClick={this.deletePlayerClick}/>\r\n            ));\r\n            additionalActions =\r\n                <Col>\r\n                    <Button type=\"default\" icon=\"sort-ascending\" onClick={this.sortPlayersAscending}/>\r\n                    <Button type=\"default\" icon=\"sort-descending\" onClick={this.sortPlayersDescending}/>\r\n                    <Button type=\"default\" icon=\"solution\" onClick={this.autoAssign}/>\r\n                    <Button type=\"default\" icon=\"export\" onClick={this.exportData}>Export to CSV</Button>\r\n                </Col>\r\n        } else {\r\n            players =\r\n                <div style={{display: \"flex\", alignItems: \"center\", height: \"80vh\"}}>\r\n                    <Empty description={\"Get started by adding players.\"}>\r\n                        {this.renderAddPlayerButton()}\r\n                    </Empty>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <div style={{padding: '20px 20px'}}>\r\n                <h3>Players{havePlayers && (\"(\" + totalPlayers + \"/80)\")}</h3>\r\n                {havePlayers && this.renderAddPlayerButton()}\r\n                <Divider/>\r\n                <Row>{additionalActions}</Row>\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"top\">\r\n                    <Col>{players}</Col>\r\n                </Row>\r\n                <PlayerInputForm wrappedComponentRef={this.formRef}\r\n                                 playerInput={this.props.playerInput}\r\n                                 onSave={this.savePlayerInfo}\r\n                                 onCancel={this.closePlayerInputForm}\r\n                                 visible={this.props.visible}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    openForm,\r\n    closeForm,\r\n    initPlayers,\r\n    addPlayer,\r\n    updatePlayer,\r\n    deletePlayer,\r\n    clearPlayers,\r\n    unassignPlayer,\r\n    sortPlayersByPower,\r\n    autoAssignPlayers\r\n})(PlayerList)\r\n","export const getAllPlayers = (store) => store.player.players;\n\nexport const fillUpEmptySpots = (players) => {\n  const emptySpots = 4 - players.length;\n  for (let i = 0; i < emptySpots; i++) {\n    players.push(null);\n  }\n  return players;\n};\n\nexport const getPlayersByTeamType = (players, teamType) => players.filter((value) => value.teamType === teamType);\n\nexport const getPlayersByTeamIndex = (players, index) => {\n  const filtered = players.filter((value) => value.teamIndex === index);\n  return fillUpEmptySpots(filtered);\n};\n","import React from 'react';\nimport { Col, Icon, Popover } from 'antd';\nimport { useDrag } from 'react-dnd';\nimport { PlayerCard } from '../player/PlayerCard';\nimport { ItemTypes } from '../../constants/drag_item_types';\nimport { ULALA_CLASS_TAG_COLORS } from '../../constants/classes';\n\nexport function TeamPlayerIcon(props) {\n  let playerRepresentation;\n  const { player } = props;\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: ItemTypes.PLAYER,\n      playerObject: player,\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const onUnassignPlayerClick = () => {\n    props.onUnassignPlayerClick(player);\n  };\n\n  if (player != null) {\n    const popoverContent = <PlayerCard value={player} onUnassignPlayerClick={onUnassignPlayerClick} />;\n    const playerColor = ULALA_CLASS_TAG_COLORS[player.class.key - 1];\n\n    playerRepresentation = (\n      <div\n        ref={drag}\n        style={{\n          opacity: isDragging ? 0.5 : 1,\n          cursor: 'move',\n        }}\n      >\n        <Popover\n          content={popoverContent}\n          trigger=\"hover\"\n        >\n          <Icon style={{ color: playerColor }} type=\"smile\" />\n          {' '}\n          {player.playerIndex + 1}\n          <p>{player.name}</p>\n        </Popover>\n      </div>\n    );\n  } else {\n    playerRepresentation = <Icon type=\"question\" />;\n  }\n\n  return (\n    <Col span={6}>{playerRepresentation}</Col>\n  );\n}\n","import React from 'react';\nimport {\n  Badge, Card, Row, Tooltip,\n} from 'antd';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../../constants/drag_item_types';\nimport { TeamPlayerIcon } from './TeamPlayerIcon';\n\nexport function TeamCard(props) {\n  let teamPower = 0;\n  let totalPlayers = 0;\n\n  const { team } = props;\n\n  if (team.players != null) {\n    team.players.forEach((element) => {\n      if (element != null) {\n        ++totalPlayers;\n      }\n      teamPower += element ? parseInt(element.power) : 0;\n    });\n  }\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.PLAYER,\n    drop: (item) => props.updatePlayerToTeam(item.playerObject, team),\n    canDrop: () => totalPlayers < 4,\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  const onUnassignPlayerClick = (player) => {\n    props.onUnassignPlayerClick(player);\n  };\n\n  return (\n    <div ref={drop}>\n      <Card\n        style={{\n          width: 'auto',\n          background: isOver ? '#f6ffed' : 'white',\n        }}\n        extra={(\n          <Tooltip placement=\"top\" title=\"Power\">\n            <Badge\n              count={teamPower.toLocaleString()}\n              overflowCount={99999999}\n              style={{ backgroundColor: '#52c41a' }}\n            />\n          </Tooltip>\n)}\n        title={`Team ${team.teamIndex + 1}`}\n      >\n        <Row>\n          {\n                        team.players.map((element, index) => <TeamPlayerIcon key={index} player={element} onUnassignPlayerClick={onUnassignPlayerClick} />)\n                    }\n        </Row>\n      </Card>\n    </div>\n  );\n}\n","export const TeamType = {\n  DEFENSE: 'DEFENSE',\n  ATTACK: 'ATTACK',\n  ELITE: 'ELITE',\n};\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\nimport {getAllPlayers, getPlayersByTeamIndex, getPlayersByTeamType} from \"../../selector\";\r\nimport {connect} from \"react-redux\";\r\nimport {TeamCard} from \"./TeamCard\";\r\nimport {unassignPlayer, updatePlayer} from \"../../actions/player\";\r\nimport {TeamType} from \"../../constants/team_types\";\r\nimport {TEAM_LIST_DISPLAY_IN_COL} from \"../../constants/action_types\";\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.teamList,\r\n    players: getAllPlayers(state),\r\n});\r\n\r\nclass TeamList extends React.Component {\r\n\r\n    updatePlayerToTeam = (player, team) => {\r\n        player.teamIndex = team.teamIndex;\r\n        player.teamType = team.teamType;\r\n        this.props.updatePlayer(player)\r\n    };\r\n\r\n    onUnassignPlayerClick = (player) => {\r\n        this.props.unassignPlayer(player);\r\n    };\r\n\r\n    buildTeamTemplateByType(players, teamType, totalTeams) {\r\n        let teamPlayers = getPlayersByTeamType(this.props.players, teamType);\r\n        let teamTemplate = [];\r\n\r\n        for (let i = 0; i < totalTeams; i++) {\r\n            teamTemplate.push({\r\n                players: getPlayersByTeamIndex(teamPlayers, i),\r\n                teamType: teamType,\r\n                teamIndex: i\r\n            });\r\n        }\r\n\r\n        return teamTemplate;\r\n    }\r\n\r\n    renderTeam(teams) {\r\n        let isEliteTeam = teams && teams.length === 1;\r\n\r\n        return (\r\n            teams.map((item, index) => (\r\n                <Col span={!isEliteTeam ? 12 : 24} key={index}>\r\n                    <TeamCard team={item}\r\n                              updatePlayerToTeam={this.updatePlayerToTeam} onUnassignPlayerClick={this.onUnassignPlayerClick}/>\r\n                </Col>\r\n            ))\r\n        )\r\n    }\r\n\r\n    renderInColumns(defenseTeamTemplates, eliteTeamTemplates, attackTeamTemplates) {\r\n        return (\r\n            <Row gutter={16}\r\n                 type=\"flex\"\r\n                 justify=\"space-around\"\r\n                 align=\"top\">\r\n                <Col span={9}>\r\n                    <h3>Defense</h3>\r\n                    <Row gutter={16}>\r\n                        {this.renderTeam(defenseTeamTemplates)}\r\n                    </Row>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <h3>Elite</h3>\r\n                    <Row gutter={16}>\r\n                        {this.renderTeam(eliteTeamTemplates)}\r\n                    </Row>\r\n                </Col>\r\n                <Col span={9}>\r\n                    <h3>Attack</h3>\r\n                    <Row gutter={16}>\r\n                        {this.renderTeam(attackTeamTemplates)}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    renderInRows(defenseTeamTemplates, eliteTeamTemplates, attackTeamTemplates) {\r\n        return (\r\n            <Row gutter={16}\r\n                 type=\"flex\"\r\n                 justify=\"space-around\"\r\n                 align=\"top\">\r\n                <Col>\r\n                    <h3>Defense</h3>\r\n                    {this.renderTeam(defenseTeamTemplates)}\r\n\r\n                    <h3>Elite</h3>\r\n                    {this.renderTeam(eliteTeamTemplates)}\r\n\r\n                    <h3>Attack</h3>\r\n                    {this.renderTeam(attackTeamTemplates)}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        let defenseTeamTemplates = [];\r\n        let attackTeamTemplates = [];\r\n        let eliteTeamTemplates = [];\r\n\r\n        if (this.props.players != null) {\r\n            // defense teams\r\n            defenseTeamTemplates = this.buildTeamTemplateByType(this.props.players, TeamType.DEFENSE, 8);\r\n            attackTeamTemplates = this.buildTeamTemplateByType(this.props.players, TeamType.ATTACK, 8);\r\n            eliteTeamTemplates = this.buildTeamTemplateByType(this.props.players, TeamType.ELITE, 1);\r\n        }\r\n\r\n        let displayType = (this.props.display && this.props.display === TEAM_LIST_DISPLAY_IN_COL)\r\n            ? this.renderInColumns(defenseTeamTemplates, eliteTeamTemplates, attackTeamTemplates)\r\n            : this.renderInRows(defenseTeamTemplates, eliteTeamTemplates, attackTeamTemplates);\r\n\r\n        // let displayType = this.renderInRows(defenseTeamTemplates, eliteTeamTemplates, attackTeamTemplates);\r\n        return (\r\n            displayType\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updatePlayer, unassignPlayer})(TeamList);\r\n","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport { Layout } from 'antd';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport PlayerList from '../player/PlayerList';\nimport TeamList from '../team/TeamList';\n\nconst {\n  Header, Footer, Sider, Content,\n} = Layout;\n\nfunction App() {\n  const siderWidth = 300;\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Layout>\n        <Sider\n          width={siderWidth}\n          style={{\n            background: '#fff',\n            overflow: 'auto',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n\n          }}\n        >\n          <PlayerList />\n        </Sider>\n\n        <Layout style={{\n          marginLeft: siderWidth,\n          height: '100vh',\n        }}\n        >\n\n          <Header className=\"header\" style={{ background: 'antiquewhite' }}><h2>Ulala Clan War Planner</h2></Header>\n\n          <Content style={{\n            margin: '10px',\n            padding: '20px',\n            background: 'white',\n            overflow: 'auto',\n          }}\n          >\n\n            <TeamList />\n\n          </Content>\n\n          <Footer className=\"custom-footer\">Developed by kmye ©2021</Footer>\n        </Layout>\n\n      </Layout>\n    </DndProvider>\n\n  );\n}\n\nexport default connect()(App);\n","import {\n  PLAYER_ADD,\n  PLAYER_AUTO_ASSIGN,\n  PLAYER_CLEAR,\n  PLAYER_DELETE,\n  PLAYER_INIT,\n  PLAYER_SORT_BY_POWER,\n  PLAYER_UNASSIGN,\n  PLAYER_UPDATE\n} from \"../constants/action_types\";\nimport {PLAYER_MASTER} from \"../constants/local_storage\";\nimport {ClassType, getAllClassIdsByType} from \"../constants/classes\";\nimport {TeamType} from \"../constants/team_types\";\n\nfunction storePlayersInLocalStorage(players) {\n  localStorage.setItem(PLAYER_MASTER, JSON.stringify(players));\n}\n\nfunction removePlayerFromArray(playerIndex, arrayList) {\n  let filtered = arrayList.filter(function (value, index) {\n    return index !== playerIndex;\n  });\n\n  // update all index\n  return filtered.map((item, index) => {\n    item.playerIndex = index;\n    return item;\n  })\n}\n\nfunction updatePlayerInArray(player, arrayList) {\n  return arrayList.map((item, index) => {\n    if (index !== player.playerIndex) {\n      return item\n    }\n\n    // Otherwise, this is the one we want - return an updated value\n    return {\n      ...item,\n      ...player\n    }\n  })\n}\n\nfunction sortPlayers(players, sortAscending) {\n  let sorted = players.sort(function (a, b) {\n    return (sortAscending) ? (a.power - b.power) : (b.power) - (a.power);\n  });\n\n  return sorted.map((item, index) => {\n    item.playerIndex = index;\n    return item;\n  });\n}\n\nfunction autoAssignPlayers(players) {\n\n  const sortedPlayers = sortPlayers(players, false);\n\n  // separate into tank, dps and healers\n  const tankPlayers = sortedPlayers.filter((item) => {\n    return getAllClassIdsByType(ClassType.TANK).includes(item.class.key)\n  });\n\n  const dpsPlayers = sortedPlayers.filter((item) => {\n    return getAllClassIdsByType(ClassType.DPS).includes(item.class.key)\n  });\n\n  const magicDpsPlayers = sortedPlayers.filter((item) => {\n    return getAllClassIdsByType(ClassType.MAGIC_DPS).includes(item.class.key)\n  });\n\n  const supportPlayers = sortedPlayers.filter((item) => {\n    return getAllClassIdsByType(ClassType.SUPPORT).includes(item.class.key)\n  });\n\n  const assignedPlayers = [];\n\n  const shiftPlayer = (players, teamIndex, teamType) => {\n    const player = players.shift();\n    player.teamIndex = teamIndex;\n    player.teamType = teamType;\n\n    return player;\n  };\n\n  const assignToTeams = (teamIndex, teamType) => {\n    let assignedCount = 0;\n\n    do {\n      if (tankPlayers.length > 0) {\n        assignedPlayers.push(shiftPlayer(tankPlayers, teamIndex, teamType));\n        ++assignedCount;\n      }\n\n      if (supportPlayers.length > 0) {\n        assignedPlayers.push(shiftPlayer(supportPlayers, teamIndex, teamType));\n        ++assignedCount;\n      }\n\n      if (magicDpsPlayers.length > 0) {\n        assignedPlayers.push(shiftPlayer(magicDpsPlayers, teamIndex, teamType));\n        ++assignedCount;\n      }\n\n      if (dpsPlayers.length > 0) {\n        assignedPlayers.push(shiftPlayer(dpsPlayers, teamIndex, teamType));\n        ++assignedCount;\n      }\n      console.log(assignedCount)\n    } while (assignedCount < 4 && assignedCount >= players.length)\n  };\n\n  assignToTeams(0, TeamType.ELITE);\n\n  for (let i = 0; i < 8; ++i) {\n    assignToTeams(i, TeamType.ATTACK);\n    assignToTeams(i, TeamType.DEFENSE);\n  }\n\n  const unassignedPlayers = sortedPlayers.filter((item) => {\n    return item.teamIndex === undefined || item.teamIndex === null;\n  });\n\n  return [...assignedPlayers, ...unassignedPlayers];\n}\n\n\nexport default (state = {}, action) => {\n\n  switch (action.type) {\n\n    case PLAYER_INIT: {\n      let localStoragePlayers = localStorage.getItem(PLAYER_MASTER);\n      return {\n        ...state,\n        players: localStoragePlayers == null ? [] : JSON.parse(localStoragePlayers)\n      };\n    }\n\n    case PLAYER_CLEAR: {\n      localStorage.setItem(PLAYER_MASTER, null);\n      return {\n        ...state,\n        players: []\n      }\n    }\n\n    case PLAYER_ADD: {\n      let {player} = action.payload;\n      let newPlayers = state.players.slice();\n      player.playerIndex = newPlayers.length;\n      newPlayers.push(player);\n      storePlayersInLocalStorage(newPlayers);\n      return {\n        ...state,\n        players: newPlayers\n      };\n    }\n\n    case PLAYER_UPDATE: {\n      let updatedArray = updatePlayerInArray(action.payload.player, state.players);\n      storePlayersInLocalStorage(updatedArray);\n      return {\n        ...state,\n        players: updatedArray\n      };\n    }\n\n    case PLAYER_DELETE: {\n      let filtered = removePlayerFromArray(action.payload.playerIndex, state.players);\n      storePlayersInLocalStorage(filtered);\n      return {\n        ...state,\n        players: filtered\n      };\n    }\n\n    case PLAYER_SORT_BY_POWER:\n      const sortType = action.payload.sortType;\n      let sorted = sortPlayers(state.players, sortType);\n      storePlayersInLocalStorage(sorted);\n      return {\n        ...state,\n        players: sorted\n      };\n\n    case PLAYER_AUTO_ASSIGN: {\n      let assignedPlayers = autoAssignPlayers(state.players);\n      storePlayersInLocalStorage(assignedPlayers);\n      return {\n        ...state,\n        players: assignedPlayers\n      }\n    }\n    case PLAYER_UNASSIGN: {\n      let player = action.payload.player;\n      player.teamIndex = null;\n      player.teamType = null;\n      let updatedArray = updatePlayerInArray(player, state.players);\n      storePlayersInLocalStorage(updatedArray);\n      return {\n        ...state,\n        players: updatedArray\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n","export const PLAYER_MASTER = 'PLAYER_MASTER';\n","import { combineReducers } from 'redux';\n\nimport { routerReducer } from 'react-router-redux';\n\nimport player from './reducers/player';\nimport playerInputForm from './reducers/player_import_form';\nimport teamList from './reducers/team_list';\n\nexport default combineReducers({\n  // TODO add reducer here\n  player,\n  playerInputForm,\n  teamList,\n  router: routerReducer,\n});\n","import { PLAYER_FORM_CLOSE, PLAYER_FORM_OPEN } from '../constants/action_types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case PLAYER_FORM_OPEN:\n      return {\n        ...state,\n        playerInput: action.payload.playerInput,\n        visible: true,\n      };\n\n    case PLAYER_FORM_CLOSE:\n      return {\n        ...state,\n        visible: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { TEAM_INIT } from '../constants/action_types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case TEAM_INIT: {\n      return {\n        ...state,\n        displayInRow: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore } from 'redux';\n\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './components/app/App';\n\nimport { store } from './store';\n\nReactDOM.render(<Provider store={store}>\n  {' '}\n  <App />\n  {' '}\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}